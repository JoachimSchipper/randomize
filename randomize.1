.\"
.\" Copyright (c) 2009, 2010 Joachim Schipper <joachim@joachimschipper.nl>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd July 11, 2010
.\" To fix
.Dt RANDOMIZE 1 LOCAL
.Os \&
.Sh NAME
.Nm randomize
.Nd print records in a random order
.Sh SYNOPSIS
.Nm randomize
.Op Fl a | e Ar regex
.Op Fl o Ar str
.Op Fl n Ar number
.Op Ar arg ...
.Sh DESCRIPTION
The
.Nm
utility reads records delimited by
.Ar regex
from the
.Ar arg
operands.
These records are randomly permuted and written to the standard output, delimited by
.Ar str .
.Pp
If no operands are given, or an operand of
.Ql -
is given,
.Nm
reads from standard input.
If the
.Fl a
flag is given, the operands themselves are randomly permuted and written to the standard output, delimited by
.Ar str .
.Pp
The options are as defined below:
.Bl -tag -width Fl
.It Fl a
Treat the operands as records.
.It Fl e Ar regex
Set the regular expression used to delimit records in the input (the default is 
.Dq \en ) .
.Ar regex
is a Perl-compatible regular expression, with the options
.Sq (?msX)
set (i.e. a dot matches NUL characters).
See
.Xr pcrepattern 3 .
.It Fl o Ar str
Set the string used to delimit records in the output (the default is
.Dq \en ) .
Certain character sequences in
.Ar str
are handled specially: 
.Ql &
is replaced by the text matched by
.Ar regex ,
and
.Ql \e# ,
where # is a digit from 1 to 9, is replaced by the string matched by the subpattern (see
.Xr pcrepattern 3 ) .
C-style escape sequences and character constants are accepted (e.g.
.Ql \en ,
.Ql \ex0a ,
.Ql \e012 ) .
The character sequences
.Ql \e\e
and
.Ql \e&
output a literal backslash respectively ampersand.
All other backslash-initiated character sequences are reserved for future expansion.
.It Fl n Ar number
Output
.Ar number
records (or all records, if less).
.El
.Pp
.Ex -std randomize
.Sh ENVIRONMENT
.Bl -tag -width TMPDIR
.It Ev TMPDIR
.Nm
may use one or more temporary files.
If the
.Ev TMPDIR
variable is set, this file is created in this directory.
Otherwise,
.Pa /tmp
is used.
.El
.Sh EXAMPLES
Print lines read from the standard input to the standard output, in random order:
.Pp
.Dl $ randomize
.Pp
Read all words from file1 and file2 and print them to the standard output, each word on its own line:
.Pp
.Dl "$ randomize -e '[ \en]+' file1 file2"
.Pp
Play files in a random order (``shuffle''):
.Pp
.Dl "$ randomize -ao '\e0' *.raw | xargs -0r aucat"
.Pp
.Sh SEE ALSO
.Xr fortune 6 ,
.Xr random 6 ,
.Xr xargs 1 ,
.Xr pcregrep 1
.Sh AUTHORS
.An Joachim Schipper Aq joachim@joachimschipper.nl
