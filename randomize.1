.\"
.\" Copyright (c) 2009 Joachim Schipper <joachim@joachimschipper.nl>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd November 2, 2009
.\" To fix
.Dt RANDOMIZE 1 LOCAL
.Os \&
.Sh NAME
.Nm randomize
.Nd print records in a random order
.Sh SYNOPSIS
.Nm randomize
.\" troff only takes 9 arguments, so the single-line equivalent fails
.Oo
.Fl i Ar str
.Op Fl i Ar str ...
.Oc
.Op Fl o Ar str
.Op Ar
.Br
.Nm randomize
(
.Fl a | e
)
.Op Fl o Ar str
.Op arg ...
.Sh DESCRIPTION
The
.Nm
utility operates in either of two modes.
By default, it treats its arguments as the names of files and reads delimited records (by default, lines) from these files. If
.Ar file
is
.Ql -
or there are no file arguments,
.Nm
reads from the standard input. If given the
.Fl a
or
.Fl e
flag, the arguments are instead treated as records. In either case, 
.Nm
prints the records to the standard output in a random order, with a newline after each record (by default; see
.Fl o ) .
.Pp
Several options refer to escape sequences; all escape sequences defined by the C language are accepted. In particular,
.Ql \en
is a newline,
.Ql \e0
is a NUL character and
.Ql \exf2
is a byte with hexadecimal value 0xf2 (decimal value 242).
.Pp
The options are as defined below:
.Bl -tag -width Fl
.It Fl a
Treat the arguments as records (instead of filenames).
.It Fl e
Like
.Fl a ,
but additionally process escape sequences in
.Bk -words
.Ar arg ... .
.Ek
.It Fl i Ar str
Treat the arguments as files to read records from and add
.Ar str
to the list of delimiters.
A record is terminated by the longest first matching delimiter and does not include the delimiter itself.
Escape sequences in
.Ar str
are processed.
If no
.Fl i
flags are given, there is exactly one record delimiter,
.Ql \en
(i.e. newline).
.It Fl o Ar str
Write
.Ar str
after each record. Escape sequences in
.Ar str
are processed.
.El
.Pp
It is not an error to specify more than one of the mutually exclusive options 
.Fl a, e
and
.Fl i .
Where more than one of these options is specified, the last option given overrides the others.
.Pp
.Ex -std randomize
.Sh EXAMPLES
Print lines read from the standard input to the standard output, in random order:
.Pp
.Dl $ randomize
.Pp
Read all words (delimited by space, a DOS line ending, or a UNIX line ending) from
.Ar file1
and
.Ar file2
and print them to the standard output, with spaces between the words:
.Pp
.Dl "$ randomize -i ' ' -i '\er\en' -i '\en' -o ' ' file1 file2"
.Pp
Concatenate files in random order:
.Pp
.Dl "$ find . -type f -print0 | randomize -i '\e0' -o '\e0' | xargs -0 cat"
.Pp
Test a program expecting binary input:
.Pp
.Dl "$ randomize -o '' -e '\e0' '\ex3c' '\ex10\e10' | uuencode"
.Pp
.Sh SEE ALSO
.Xr fortune 6 ,
.Xr random 6 ,
.Xr ascii 7
.Sh AUTHORS
.An Joachim Schipper Aq joachim@joachimschipper.nl
.Sh CAVEATS
The current version of
.Nm
reads all input files into memory, which is not desirable for large files.
